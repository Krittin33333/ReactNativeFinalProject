{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { getDefaultSpaceAboveMenu } from \"./statusBarUtils\";\nimport { Menu } from \"./vendor/Menu\";\nimport { useTheme } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var OVERFLOW_TOP = 15;\n\nvar warn = function warn() {\n  console.warn('It seems like you tried to open the overflow menu using the overflowMenuPressHandlerDropdownMenu' + ' - which is the default handler on android - but you forgot to wrap your root component in <OverflowMenuProvider />.' + 'Please check the installation instructions in the react-navigation-header-buttons readme!');\n};\n\nexport var OverflowMenuContext = React.createContext(warn);\nexport var OverflowMenuProvider = function OverflowMenuProvider(_ref) {\n  var children = _ref.children,\n      spaceAboveMenu = _ref.spaceAboveMenu;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    x: Dimensions.get('window').width - 10,\n    y: 40\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      position = _React$useState4[0],\n      setPosition = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      elements = _React$useState6[0],\n      setElements = _React$useState6[1];\n\n  var _useTheme = useTheme(),\n      card = _useTheme.colors.card;\n\n  var hideMenu = React.useCallback(function () {\n    setVisible(false);\n  }, []);\n  var toggleMenu = React.useCallback(function (params) {\n    setElements((params == null ? void 0 : params.elements) || []);\n\n    if (params) {\n      var x = params.x,\n          y = params.y;\n      var extraDelta = spaceAboveMenu != null ? spaceAboveMenu : getDefaultSpaceAboveMenu();\n      setPosition({\n        x: x,\n        y: y + extraDelta\n      });\n    }\n\n    setVisible(function (prevVisible) {\n      return !prevVisible;\n    });\n  }, [spaceAboveMenu]);\n  return _jsxs(OverflowMenuContext.Provider, {\n    value: toggleMenu,\n    children: [React.Children.only(children), _jsx(Menu, {\n      visible: visible,\n      onDismiss: hideMenu,\n      anchor: position,\n      contentStyle: {\n        backgroundColor: card\n      },\n      children: elements\n    })]\n  });\n};","map":{"version":3,"names":["React","getDefaultSpaceAboveMenu","Menu","useTheme","OVERFLOW_TOP","warn","console","OverflowMenuContext","createContext","OverflowMenuProvider","children","spaceAboveMenu","useState","visible","setVisible","x","Dimensions","get","width","y","position","setPosition","elements","setElements","card","colors","hideMenu","useCallback","toggleMenu","params","extraDelta","prevVisible","Children","only","backgroundColor"],"sources":["E:/reactpro/ReactNativeFinalProject/node_modules/react-navigation-header-buttons/src/overflowMenu/OverflowMenuContext.js"],"sourcesContent":["// @flow\r\nimport * as React from 'react';\r\nimport { Dimensions } from 'react-native';\r\nimport { getDefaultSpaceAboveMenu } from './statusBarUtils';\r\nimport { Menu } from './vendor/Menu';\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nexport type ToggleMenuParam = ?{\r\n  elements: React.ChildrenArray<any>,\r\n  x: number,\r\n  y: number,\r\n};\r\n\r\nexport const OVERFLOW_TOP = 15;\r\n\r\nconst warn = () => {\r\n  // the noop value will be replaced by OverflowMenuProvider rendered in app root\r\n  console.warn(\r\n    'It seems like you tried to open the overflow menu using the overflowMenuPressHandlerDropdownMenu' +\r\n      ' - which is the default handler on android - but you forgot to wrap your root component in <OverflowMenuProvider />.' +\r\n      'Please check the installation instructions in the react-navigation-header-buttons readme!'\r\n  );\r\n};\r\nexport const OverflowMenuContext: any = React.createContext<(ToggleMenuParam) => void>(warn);\r\n\r\ntype Props = {\r\n  children: React.Element<any>,\r\n  spaceAboveMenu?: number,\r\n};\r\n\r\nexport const OverflowMenuProvider = ({\r\n  children,\r\n  spaceAboveMenu,\r\n}: Props): React.Element<typeof OverflowMenuProvider> => {\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [position, setPosition] = React.useState({ x: Dimensions.get('window').width - 10, y: 40 });\r\n  const [elements, setElements] = React.useState(null);\r\n  const {\r\n    colors: { card },\r\n  } = useTheme();\r\n\r\n  const hideMenu = React.useCallback(() => {\r\n    setVisible(false);\r\n  }, []);\r\n\r\n  const toggleMenu = React.useCallback(\r\n    (params: ToggleMenuParam) => {\r\n      setElements(params?.elements || []);\r\n      if (params) {\r\n        const { x, y } = params;\r\n        const extraDelta = spaceAboveMenu ?? getDefaultSpaceAboveMenu();\r\n        setPosition({ x, y: y + extraDelta });\r\n      }\r\n      setVisible((prevVisible) => !prevVisible);\r\n    },\r\n    [spaceAboveMenu]\r\n  );\r\n\r\n  return (\r\n    <OverflowMenuContext.Provider value={toggleMenu}>\r\n      {React.Children.only(children)}\r\n      <Menu\r\n        visible={visible}\r\n        onDismiss={hideMenu}\r\n        anchor={position}\r\n        contentStyle={{ backgroundColor: card }}\r\n      >\r\n        {elements}\r\n      </Menu>\r\n    </OverflowMenuContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,wBAAT;AACA,SAASC,IAAT;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;AAQA,OAAO,IAAMC,YAAY,GAAG,EAArB;;AAEP,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;EAEjBC,OAAO,CAACD,IAAR,CACE,qGACE,sHADF,GAEE,2FAHJ;AAKD,CAPD;;AAQA,OAAO,IAAME,mBAAwB,GAAGP,KAAK,CAACQ,aAAN,CAA+CH,IAA/C,CAAjC;AAOP,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,OAGqB;EAAA,IAFvDC,QAEuD,QAFvDA,QAEuD;EAAA,IADvDC,cACuD,QADvDA,cACuD;;EACvD,sBAA8BX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EACA,uBAAgCd,KAAK,CAACY,QAAN,CAAe;IAAEG,CAAC,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,EAAtC;IAA0CC,CAAC,EAAE;EAA7C,CAAf,CAAhC;EAAA;EAAA,IAAOC,QAAP;EAAA,IAAiBC,WAAjB;;EACA,uBAAgCrB,KAAK,CAACY,QAAN,CAAe,IAAf,CAAhC;EAAA;EAAA,IAAOU,QAAP;EAAA,IAAiBC,WAAjB;;EACA,gBAEIpB,QAAQ,EAFZ;EAAA,IACYqB,IADZ,aACEC,MADF,CACYD,IADZ;;EAIA,IAAME,QAAQ,GAAG1B,KAAK,CAAC2B,WAAN,CAAkB,YAAM;IACvCb,UAAU,CAAC,KAAD,CAAV;EACD,CAFgB,EAEd,EAFc,CAAjB;EAIA,IAAMc,UAAU,GAAG5B,KAAK,CAAC2B,WAAN,CACjB,UAACE,MAAD,EAA6B;IAC3BN,WAAW,CAAC,CAAAM,MAAM,QAAN,YAAAA,MAAM,CAAEP,QAAR,KAAoB,EAArB,CAAX;;IACA,IAAIO,MAAJ,EAAY;MACV,IAAQd,CAAR,GAAiBc,MAAjB,CAAQd,CAAR;MAAA,IAAWI,CAAX,GAAiBU,MAAjB,CAAWV,CAAX;MACA,IAAMW,UAAU,GAAGnB,cAAH,WAAGA,cAAH,GAAqBV,wBAAwB,EAA7D;MACAoB,WAAW,CAAC;QAAEN,CAAC,EAADA,CAAF;QAAKI,CAAC,EAAEA,CAAC,GAAGW;MAAZ,CAAD,CAAX;IACD;;IACDhB,UAAU,CAAC,UAACiB,WAAD;MAAA,OAAiB,CAACA,WAAlB;IAAA,CAAD,CAAV;EACD,CATgB,EAUjB,CAACpB,cAAD,CAViB,CAAnB;EAaA,OACE,MAAC,mBAAD,CAAqB,QAArB;IAA8B,KAAK,EAAEiB,UAArC;IAAA,WACG5B,KAAK,CAACgC,QAAN,CAAeC,IAAf,CAAoBvB,QAApB,CADH,EAEE,KAAC,IAAD;MACE,OAAO,EAAEG,OADX;MAEE,SAAS,EAAEa,QAFb;MAGE,MAAM,EAAEN,QAHV;MAIE,YAAY,EAAE;QAAEc,eAAe,EAAEV;MAAnB,CAJhB;MAAA,UAMGF;IANH,EAFF;EAAA,EADF;AAaD,CAzCM"},"metadata":{},"sourceType":"module"}