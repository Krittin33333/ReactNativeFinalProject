{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItem, DrawerItemList } from \"@react-navigation/drawer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: \"rgb(255,45,85)\",\n    background: \"rgb(250, 255, 255 )\"\n  })\n});\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(Ionicons, {\n      name: \"home\",\n      size: 30,\n      color: \"#42AC42\"\n    }), _jsx(Text, {\n      children: \"Home Screen\"\n    })]\n  });\n}\nfunction SettingScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Setting Screen\"\n    }), _jsx(Button, {\n      title: \"Go to Home\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    })]\n  });\n}\nvar Tab = createBottomTabNavigator();\nfunction MyTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n            color = _ref4.color,\n            size = _ref4.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Setting') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Setting\",\n      component: SettingScreen\n    })]\n  });\n}\nvar Drawer = createDrawerNavigator();\nfunction MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    useLegacyImplementation: true,\n    children: [_jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: MyTabs\n    }), _jsx(Drawer.Screen, {\n      name: \"Setting\",\n      component: SettingScreen\n    })]\n  });\n}\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    theme: MyTheme,\n    children: _jsx(MyDrawer, {})\n  });\n};\nexport default App;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","Ionicons","NavigationContainer","DefaultTheme","createBottomTabNavigator","createDrawerNavigator","DrawerContentScrollView","DrawerItem","DrawerItemList","MyTheme","colors","primary","background","HomeScreen","navigation","flex","justifyContent","alignItems","SettingScreen","goBack","Tab","MyTabs","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Drawer","MyDrawer","App","styles","StyleSheet","create"],"sources":["C:/ReactNativeFinalProject/App.js"],"sourcesContent":["import { StyleSheet, Text, View ,Button} from 'react-native'\r\nimport React from 'react'\r\nimport { Ionicons } from '@expo/vector-icons';\r\n \r\nimport {NavigationContainer, DefaultTheme} from '@react-navigation/native';\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItem,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\n\r\nconst MyTheme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    primary: \"rgb(255,45,85)\",\r\n    background: \"rgb(250, 255, 255 )\",\r\n  },\r\n};\r\n\r\nfunction HomeScreen({navigation}){\r\n  return(\r\n    <View style = {{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n      <Ionicons name=\"home\" size={30} color=\"#42AC42\" />\r\n      <Text>Home Screen</Text>\r\n      {/* <Button title=\"Go to Setting\"\r\n      onPress={() => navigation.navigate(\"Setting\")}/> */}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction SettingScreen({navigation}){\r\n  return(\r\n    <View style = {{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n      <Text>Setting Screen</Text>\r\n      <Button title=\"Go to Home\"\r\n      onPress={() => navigation.goBack()}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\nfunction MyTabs(){\r\n  return(\r\n    <Tab.Navigator \r\n      screenOptions={({route})=>({\r\n        tabBarIcon: ({focused,color,size})=>{\r\n          let iconName;\r\n          if(route.name==='Home'){\r\n            iconName = focused\r\n            ?'ios-information-circle'\r\n            :'ios-information-circle-outline'\r\n          } else if (route.name === 'Setting'){\r\n            iconName = focused\r\n            ?'ios-list-box'\r\n            :'ios-list'\r\n          }\r\n          // you can return any component\r\n          return <Ionicons name={iconName} size={size} color={color}/>;\r\n        },\r\n        tabBarActiveTintColor: 'tomato',\r\n        tabBarInactiveTintColor: 'gray',\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen}/>\r\n      <Tab.Screen name=\"Setting\" component={SettingScreen}/>\r\n      \r\n    </Tab.Navigator>\r\n  )\r\n}\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction MyDrawer() {\r\n  return (\r\n   \r\n      <Drawer.Navigator useLegacyImplementation>\r\n        <Drawer.Screen name='Home'component={MyTabs}/>\r\n        <Drawer.Screen name=\"Setting\" component={SettingScreen}/>\r\n      </Drawer.Navigator>\r\n    \r\n  )\r\n}\r\nconst App = () => {\r\n  return (\r\n    <NavigationContainer theme={MyTheme}>    \r\n      <MyDrawer/>\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nconst styles = StyleSheet.create({})"],"mappings":"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"},"metadata":{},"sourceType":"module"}