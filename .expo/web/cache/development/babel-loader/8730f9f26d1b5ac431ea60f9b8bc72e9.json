{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\", \"style\", \"renderButtonElement\", \"background\", \"iconName\", \"title\", \"buttonStyle\", \"IconComponent\", \"iconSize\", \"color\", \"pressColor\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableItem from \"./TouchableItem\";\nimport { useTheme } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar BUTTON_HIT_SLOP = Object.freeze({\n  top: 5,\n  bottom: 5,\n  left: 5,\n  right: 5\n});\nexport function HeaderButton(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors,\n      dark = _useTheme.dark;\n\n  var themeColor = Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var themePressColorAndroid = dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n\n  var onPress = props.onPress,\n      style = props.style,\n      renderButtonElement = props.renderButtonElement,\n      background = props.background,\n      iconName = props.iconName,\n      title = props.title,\n      buttonStyle = props.buttonStyle,\n      IconComponent = props.IconComponent,\n      iconSize = props.iconSize,\n      color = props.color,\n      pressColor = props.pressColor,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var usedColor = color || themeColor;\n  var usedPressColor = pressColor || themePressColorAndroid;\n  var ButtonElement = renderButtonElement({\n    iconName: iconName,\n    title: title,\n    buttonStyle: buttonStyle,\n    IconComponent: IconComponent,\n    iconSize: iconSize,\n    color: usedColor\n  });\n\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n\n  return _jsx(TouchableItem, _objectSpread(_objectSpread({\n    borderless: true,\n    onPress: handlePress,\n    hitSlop: BUTTON_HIT_SLOP,\n    rippleRadius: 20,\n    style: StyleSheet.compose(styles.buttonContainer, style),\n    pressColor: usedPressColor\n  }, other), {}, {\n    children: _jsx(View, {\n      children: ButtonElement\n    })\n  }));\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","TouchableItem","useTheme","BUTTON_HIT_SLOP","Object","freeze","top","bottom","left","right","HeaderButton","props","colors","dark","themeColor","Platform","select","ios","primary","default","text","themePressColorAndroid","onPress","style","renderButtonElement","background","iconName","title","buttonStyle","IconComponent","iconSize","color","pressColor","other","usedColor","usedPressColor","ButtonElement","handlePress","requestAnimationFrame","StyleSheet","compose","styles","buttonContainer","create","alignItems","justifyContent"],"sources":["E:/reactpro/ReactNativeFinalProject/node_modules/react-navigation-header-buttons/src/HeaderButton.js"],"sourcesContent":["/**\r\n * @flow\r\n */\r\nimport * as React from 'react';\r\nimport { StyleSheet, View, TouchableWithoutFeedback, Platform } from 'react-native';\r\nimport TouchableItem from './TouchableItem';\r\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nconst BUTTON_HIT_SLOP = Object.freeze({ top: 5, bottom: 5, left: 5, right: 5 });\r\n\r\n// for renderVisibleButton() function\r\nexport type VisibleButtonProps = {\r\n  IconComponent?: React.ComponentType<any>,\r\n  iconSize?: number,\r\n  color?: string,\r\n  iconName?: string,\r\n  title: string,\r\n  buttonStyle?: ViewStyleProp,\r\n};\r\n\r\n// from <Item />\r\nexport type ItemProps = {\r\n  ...$Exact<React.ElementConfig<typeof TouchableWithoutFeedback>>,\r\n  ...VisibleButtonProps,\r\n  onPress: ?() => any,\r\n  style?: ViewStyleProp,\r\n};\r\n\r\ntype OtherProps = {\r\n  background?: any,\r\n  foreground?: any,\r\n  pressColor?: any,\r\n  renderButtonElement: (VisibleButtonProps) => React.Element<any>,\r\n  ...\r\n};\r\n\r\nexport type HeaderButtonProps = ItemProps & OtherProps;\r\n\r\nexport function HeaderButton(props: HeaderButtonProps): React.Node {\r\n  const { colors, dark } = useTheme();\r\n  const themeColor = Platform.select({\r\n    ios: colors.primary,\r\n    default: colors.text,\r\n  });\r\n  const themePressColorAndroid = dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\r\n\r\n  const {\r\n    onPress,\r\n    style,\r\n    renderButtonElement,\r\n    background,\r\n    iconName,\r\n    title,\r\n    buttonStyle,\r\n    IconComponent,\r\n    iconSize,\r\n    color,\r\n    pressColor,\r\n    ...other\r\n  } = props;\r\n\r\n  const usedColor = color || themeColor;\r\n  const usedPressColor = pressColor || themePressColorAndroid;\r\n\r\n  const ButtonElement = renderButtonElement({\r\n    iconName,\r\n    title,\r\n    buttonStyle,\r\n    IconComponent,\r\n    iconSize,\r\n    color: usedColor,\r\n  });\r\n\r\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\r\n\r\n  return (\r\n    <TouchableItem\r\n      borderless\r\n      onPress={handlePress}\r\n      hitSlop={BUTTON_HIT_SLOP}\r\n      rippleRadius={20}\r\n      style={StyleSheet.compose(styles.buttonContainer, style)}\r\n      pressColor={usedPressColor}\r\n      {...other}\r\n    >\r\n      <View>{ButtonElement}</View>\r\n    </TouchableItem>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":";;;;;;;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,aAAP;AAEA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,IAAMC,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc;EAAEC,GAAG,EAAE,CAAP;EAAUC,MAAM,EAAE,CAAlB;EAAqBC,IAAI,EAAE,CAA3B;EAA8BC,KAAK,EAAE;AAArC,CAAd,CAAxB;AA8BA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA4D;EACjE,gBAAyBT,QAAQ,EAAjC;EAAA,IAAQU,MAAR,aAAQA,MAAR;EAAA,IAAgBC,IAAhB,aAAgBA,IAAhB;;EACA,IAAMC,UAAU,GAAGC,QAAQ,CAACC,MAAT,CAAgB;IACjCC,GAAG,EAAEL,MAAM,CAACM,OADqB;IAEjCC,OAAO,EAAEP,MAAM,CAACQ;EAFiB,CAAhB,CAAnB;EAIA,IAAMC,sBAAsB,GAAGR,IAAI,GAAG,0BAAH,GAAgC,oBAAnE;;EAEA,IACES,OADF,GAaIX,KAbJ,CACEW,OADF;EAAA,IAEEC,KAFF,GAaIZ,KAbJ,CAEEY,KAFF;EAAA,IAGEC,mBAHF,GAaIb,KAbJ,CAGEa,mBAHF;EAAA,IAIEC,UAJF,GAaId,KAbJ,CAIEc,UAJF;EAAA,IAKEC,QALF,GAaIf,KAbJ,CAKEe,QALF;EAAA,IAMEC,KANF,GAaIhB,KAbJ,CAMEgB,KANF;EAAA,IAOEC,WAPF,GAaIjB,KAbJ,CAOEiB,WAPF;EAAA,IAQEC,aARF,GAaIlB,KAbJ,CAQEkB,aARF;EAAA,IASEC,QATF,GAaInB,KAbJ,CASEmB,QATF;EAAA,IAUEC,KAVF,GAaIpB,KAbJ,CAUEoB,KAVF;EAAA,IAWEC,UAXF,GAaIrB,KAbJ,CAWEqB,UAXF;EAAA,IAYKC,KAZL,4BAaItB,KAbJ;;EAeA,IAAMuB,SAAS,GAAGH,KAAK,IAAIjB,UAA3B;EACA,IAAMqB,cAAc,GAAGH,UAAU,IAAIX,sBAArC;EAEA,IAAMe,aAAa,GAAGZ,mBAAmB,CAAC;IACxCE,QAAQ,EAARA,QADwC;IAExCC,KAAK,EAALA,KAFwC;IAGxCC,WAAW,EAAXA,WAHwC;IAIxCC,aAAa,EAAbA,aAJwC;IAKxCC,QAAQ,EAARA,QALwC;IAMxCC,KAAK,EAAEG;EANiC,CAAD,CAAzC;;EASA,IAAMG,WAAW,GAAG,SAAdA,WAAc;IAAA,OAAMf,OAAO,IAAIgB,qBAAqB,CAAChB,OAAD,CAAtC;EAAA,CAApB;;EAEA,OACE,KAAC,aAAD;IACE,UAAU,MADZ;IAEE,OAAO,EAAEe,WAFX;IAGE,OAAO,EAAElC,eAHX;IAIE,YAAY,EAAE,EAJhB;IAKE,KAAK,EAAEoC,UAAU,CAACC,OAAX,CAAmBC,MAAM,CAACC,eAA1B,EAA2CnB,KAA3C,CALT;IAME,UAAU,EAAEY;EANd,GAOMF,KAPN;IAAA,UASE,KAAC,IAAD;MAAA,UAAOG;IAAP;EATF,GADF;AAaD;AAED,IAAMK,MAAM,GAAGF,UAAU,CAACI,MAAX,CAAkB;EAC/BD,eAAe,EAAE;IACfE,UAAU,EAAE,QADG;IAEfC,cAAc,EAAE;EAFD;AADc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}