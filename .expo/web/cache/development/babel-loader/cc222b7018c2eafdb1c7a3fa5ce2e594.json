{"ast":null,"code":"\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ActionSheetIOS } from \"react-native-web/dist/index\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { HiddenItem } from \"./HeaderItems\";\nimport invariant from 'invariant';\nexport var extractOverflowButtonData = function extractOverflowButtonData(hiddenButtons) {\n  var detectedElementTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [HiddenItem];\n  var btnsData = React.Children.toArray(hiddenButtons).map(function (button) {\n    var props = button.props,\n      type = button.type;\n    if (detectedElementTypes.includes(type)) {\n      return extract(button);\n    }\n    if (typeof type === 'function') {\n      var nestedElement = callSafe(type, props);\n      if (nestedElement && detectedElementTypes.includes(nestedElement.type)) {\n        return extract(nestedElement);\n      }\n    }\n    return false;\n  });\n  return btnsData.filter(Boolean);\n};\nvar callSafe = function callSafe(type, props) {\n  try {\n    return type(props);\n  } catch (_unused) {\n    return false;\n  }\n};\nvar extract = function extract(element) {\n  var _element$props = element.props,\n    title = _element$props.title,\n    onPress = _element$props.onPress,\n    disabled = _element$props.disabled,\n    destructive = _element$props.destructive;\n  return {\n    title: title,\n    onPress: onPress,\n    destructive: destructive === true,\n    disabled: disabled === true\n  };\n};\nvar checkParams = function checkParams(hiddenButtons) {\n  invariant(Array.isArray(hiddenButtons), 'hiddenButtons must be an array');\n};\nexport var overflowMenuPressHandlerActionSheet = function overflowMenuPressHandlerActionSheet(_ref) {\n  var hiddenButtons = _ref.hiddenButtons,\n    _ref$cancelButtonLabe = _ref.cancelButtonLabel,\n    cancelButtonLabel = _ref$cancelButtonLabe === void 0 ? 'Cancel' : _ref$cancelButtonLabe;\n  checkParams(hiddenButtons);\n  var actionTitles = hiddenButtons.map(function (btn) {\n    return btn.title;\n  });\n  actionTitles.unshift(cancelButtonLabel);\n  var disabledButtonIndices = function () {\n    var result = [];\n    hiddenButtons.forEach(function (it, index) {\n      if (it.disabled === true) {\n        result.push(index + 1);\n      }\n    });\n    return result;\n  }();\n  var destructiveButtonIndex = function () {\n    var result = [];\n    hiddenButtons.forEach(function (it, index) {\n      if (it.destructive === true) {\n        result.push(index + 1);\n      }\n    });\n    return result;\n  }();\n  ActionSheetIOS.showActionSheetWithOptions(\n  {\n    options: actionTitles,\n    cancelButtonIndex: 0,\n    disabledButtonIndices: disabledButtonIndices,\n    destructiveButtonIndex: destructiveButtonIndex\n  }, function (buttonIndex) {\n    if (buttonIndex > 0) {\n      hiddenButtons[buttonIndex - 1].onPress();\n    }\n  });\n};\nexport var overflowMenuPressHandlerPopupMenu = function overflowMenuPressHandlerPopupMenu(_ref2) {\n  var hiddenButtons = _ref2.hiddenButtons,\n    overflowButtonRef = _ref2.overflowButtonRef;\n  checkParams(hiddenButtons);\n  var enabledButtons = hiddenButtons.filter(function (it) {\n    return it.disabled !== true;\n  });\n  UIManager.showPopupMenu(findNodeHandle(overflowButtonRef), enabledButtons.map(function (btn) {\n    return btn.title;\n  }), function (err) {\n    return console.debug('overflowBtn error', err);\n  }, function (eventName, index) {\n    if (eventName !== 'itemSelected' || typeof index !== 'number') {\n      return;\n    }\n    enabledButtons[index].onPress();\n  });\n};\nexport var overflowMenuPressHandlerDropdownMenu = function overflowMenuPressHandlerDropdownMenu(_ref3) {\n  var children = _ref3.children,\n    overflowButtonRef = _ref3.overflowButtonRef,\n    _private_toggleMenu = _ref3._private_toggleMenu;\n  if (overflowButtonRef) {\n    overflowButtonRef.measureInWindow(function (x, y, width) {\n      _private_toggleMenu({\n        elements: children,\n        x: x + width,\n        y: y\n      });\n    });\n  } else {\n  }\n};\nexport var defaultOnOverflowMenuPress = Platform.select({\n  ios: overflowMenuPressHandlerActionSheet,\n  default: overflowMenuPressHandlerDropdownMenu\n});","map":{"version":3,"names":["React","ActionSheetIOS","HiddenItem","invariant","extractOverflowButtonData","hiddenButtons","detectedElementTypes","btnsData","Children","toArray","map","button","props","type","includes","extract","nestedElement","callSafe","filter","Boolean","element","title","onPress","disabled","destructive","checkParams","Array","isArray","overflowMenuPressHandlerActionSheet","cancelButtonLabel","actionTitles","btn","unshift","disabledButtonIndices","result","forEach","it","index","push","destructiveButtonIndex","showActionSheetWithOptions","options","cancelButtonIndex","buttonIndex","overflowMenuPressHandlerPopupMenu","overflowButtonRef","enabledButtons","UIManager","showPopupMenu","findNodeHandle","err","console","debug","eventName","overflowMenuPressHandlerDropdownMenu","children","_private_toggleMenu","measureInWindow","x","y","width","elements","defaultOnOverflowMenuPress","Platform","select","ios","default"],"sources":["C:/ReactNativeFinalProject/node_modules/react-navigation-header-buttons/src/overflowMenuPressHandlers.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Platform, ActionSheetIOS, UIManager, findNodeHandle, typeof View } from 'react-native';\nimport { HiddenItem } from './HeaderItems';\nimport invariant from 'invariant';\nimport type { ToggleMenuParam } from './overflowMenu/OverflowMenuContext';\n\ntype OverflowButtonDescriptors = $ReadOnlyArray<{\n  title: string,\n  onPress: () => void | Promise<void>,\n  destructive?: boolean,\n  disabled?: boolean,\n}>;\n\nexport const extractOverflowButtonData = (\n  hiddenButtons: React.Node,\n  detectedElementTypes: Array<React.StatelessFunctionalComponent<any>> = [HiddenItem]\n): OverflowButtonDescriptors => {\n  // don't do this at home - this is not how React is meant to be used!\n  const btnsData = React.Children.toArray(hiddenButtons).map((button) => {\n    const { props, type } = button;\n    if (detectedElementTypes.includes(type)) {\n      return extract(button);\n    }\n\n    if (typeof type === 'function') {\n      const nestedElement = callSafe(type, props);\n      if (nestedElement && detectedElementTypes.includes(nestedElement.type)) {\n        return extract(nestedElement);\n      }\n    }\n    return false;\n  });\n  // $FlowFixMe\n  return btnsData.filter(Boolean);\n};\n\nconst callSafe = (type, props) => {\n  try {\n    return type(props);\n  } catch {\n    return false;\n  }\n};\n\nconst extract = (element: React.Element<any>) => {\n  const {\n    props: { title, onPress, disabled, destructive },\n  } = element;\n  return { title, onPress, destructive: destructive === true, disabled: disabled === true };\n};\n\nexport type OnOverflowMenuPressParams = {\n  hiddenButtons: OverflowButtonDescriptors,\n  _private_toggleMenu: (ToggleMenuParam) => void,\n  overflowButtonRef: null | View,\n  cancelButtonLabel?: string,\n  children: React.Node,\n};\n\nconst checkParams = (hiddenButtons) => {\n  invariant(Array.isArray(hiddenButtons), 'hiddenButtons must be an array');\n};\n\nexport const overflowMenuPressHandlerActionSheet = ({\n  hiddenButtons,\n  cancelButtonLabel = 'Cancel',\n}: OnOverflowMenuPressParams) => {\n  checkParams(hiddenButtons);\n  let actionTitles = hiddenButtons.map((btn) => btn.title);\n  actionTitles.unshift(cancelButtonLabel);\n\n  const disabledButtonIndices: Array<number> = (() => {\n    let result = [];\n    hiddenButtons.forEach((it, index) => {\n      if (it.disabled === true) {\n        result.push(index + 1);\n      }\n    });\n    return result;\n  })();\n\n  const destructiveButtonIndex: Array<number> = (() => {\n    let result = [];\n    hiddenButtons.forEach((it, index) => {\n      if (it.destructive === true) {\n        result.push(index + 1);\n      }\n    });\n    return result;\n  })();\n\n  ActionSheetIOS.showActionSheetWithOptions(\n    // $FlowFixMe - typings are old\n    {\n      options: actionTitles,\n      cancelButtonIndex: 0,\n      disabledButtonIndices,\n      destructiveButtonIndex,\n    },\n    (buttonIndex: number) => {\n      if (buttonIndex > 0) {\n        hiddenButtons[buttonIndex - 1].onPress();\n      }\n    }\n  );\n};\n\nexport const overflowMenuPressHandlerPopupMenu = ({\n  hiddenButtons,\n  overflowButtonRef,\n}: OnOverflowMenuPressParams) => {\n  checkParams(hiddenButtons);\n  const enabledButtons = hiddenButtons.filter((it) => it.disabled !== true);\n\n  UIManager.showPopupMenu(\n    findNodeHandle(overflowButtonRef),\n    enabledButtons.map((btn) => btn.title),\n    (err) => console.debug('overflowBtn error', err),\n    (eventName: string, index?: number) => {\n      if (eventName !== 'itemSelected' || typeof index !== 'number') {\n        return;\n      }\n      enabledButtons[index].onPress();\n    }\n  );\n};\n\nexport const overflowMenuPressHandlerDropdownMenu = ({\n  children,\n  overflowButtonRef,\n  _private_toggleMenu,\n}: OnOverflowMenuPressParams) => {\n  if (overflowButtonRef) {\n    // $FlowFixMe\n    overflowButtonRef.measureInWindow((x, y, width) => {\n      _private_toggleMenu({ elements: children, x: x + width, y });\n    });\n  } else {\n    // TODO ignore or show?\n  }\n};\n\nexport const defaultOnOverflowMenuPress: (OnOverflowMenuPressParams) => void = Platform.select({\n  ios: overflowMenuPressHandlerActionSheet,\n  default: overflowMenuPressHandlerDropdownMenu,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}